---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-frontend-rule
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.domain }}
spec:
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-frontend
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-api-rule
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /v$1/$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.domain }}
spec:
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - path: /v([0-9])/(.*)
            pathType: Prefix
            backend:
              service:
                name: public-api
                port:
                  number: {{ .Values.publicAPIPort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      {{ if .Values.dnsServiceAccount }}
      serviceAccountName: {{ .Values.dnsServiceAccount }}
      {{ end }}
      containers:
        - name: external-dns
          image: k8s.gcr.io/external-dns/external-dns:v0.7.6
          imagePullPolicy: Always
          env:
            {{ if .Values.devMode }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: env-vars
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: env-vars
                  key: aws-secret-access-key
            {{ end }}
          args:
            - --source=service
            - --source=ingress
            - --policy=upsert-only
            - --domain-filter={{ .Values.domainFilter }}
            - --provider=aws
            - --aws-zone-type=public
            - --registry=txt
            - --txt-owner-id={{ .Values.domain }}
            - --txt-prefix=txt. #https://github.com/kubernetes-sigs/external-dns/blob/master/docs/faq.md#im-using-an-elb-with-txt-registry-but-the-cname-record-clashes-with-the-txt-record-how-to-avoid-this
            - --interval=15s
            - --log-level=debug